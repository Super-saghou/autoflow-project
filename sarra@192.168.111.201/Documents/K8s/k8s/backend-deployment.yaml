apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: sarra539/autoflow-backend:UpdateV4
          ports:
            - containerPort: 5000
              name: http
            - containerPort: 5010
              name: websocket
            - containerPort: 5001
              name: flask-api
            - containerPort: 5003
              name: ai-agents
          env:
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-url
            - name: NODE_ENV
              value: "production"
            - name: BACKUP_DIR
              value: "/app/backups"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: jwt-secret
            - name: PYTHONPATH
              value: "/app"
            - name: FLASK_API_URL
              value: "http://localhost:5001"
            - name: GENERATED_PLAYBOOKS_DIR
              value: "/app/generated_playbooks"
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: backup-storage
              mountPath: /app/backups
            - name: logs-storage
              mountPath: /app/logs
          startupProbe:
            httpGet:
              path: /api/health
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/health
              port: 5000
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "kill $(cat /app/logs/*.pid) 2>/dev/null || true"]
      volumes:
        - name: backup-storage
          persistentVolumeClaim:
            claimName: backup-pvc
        - name: logs-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
      name: http
    - port: 5010
      targetPort: 5010
      name: websocket
    - port: 5001
      targetPort: 5001
      name: flask-api
    - port: 5003
      targetPort: 5003
      name: ai-agents
  selector:
    app: backend 